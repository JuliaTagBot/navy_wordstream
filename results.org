* Wordstream Results
** Setup
#+begin_src R :session
library(tidyr)
library(ggplot2)
library(dplyr)
source('trial_to_times.R')

file_pat = 'pilot_02[0-9]+.*_2017.*.csv'
data = Reduce(rbind,Map(read.csv,list.files('data',file_pat,full.names=T)))
#+end_src

#+RESULTS:

** Individual Time course

#+begin_src R :session :results output silent
by_time = data %>%
  filter(code %in% c('stimulus','stream_1','stream_2')) %>%
  group_by(sid,trial) %>%
  do(trial_to_times(.,max_seconds=50))

by_context = by_time %>%
	filter(response > 0) %>%
	group_by(sid,time,stimulus,context) %>%
	summarise(response = mean(response-1),N = length(response))

#+end_src

#+begin_src R :session
for(num in unique(by_time$sid)){
  legend = guide_legend(title='Context Stimulus')
  ggplot(subset(by_context,sid == num),
         aes(x=time,y=response,color=context,group=context)) +
    geom_line() + facet_wrap(~stimulus) +
    geom_hline(yintercept=0.5,linetype=2) +
    theme_classic() + ylab('% streaming') + xlab('time (s)')
  ggsave(paste('plots/ind_',num,'_',Sys.Date(),'.pdf',sep=''))
}
#+end_src

#+RESULTS:

** Mean Responses

#+begin_src R :session :file 1.png :results value graphics
  responses = data %>%
    filter(trial >= 1,
           code %in% c('trial_start','stimulus','stream_1','stream_2')) %>%
    group_by(sid,trial) %>%
    filter(length(stimulus[code=='stimulus']) > 0) %>%
    mutate(stimulus=first(stimulus[code=='stimulus']),
           spacing=first(spacing[code=='stimulus'])) %>%
    filter(code != 'stimulus',stimulus %in% c('w2nw','nw2w')) %>%
    group_by(sid) %>%
    filter(code != lag(code) | trial != lag(trial)) %>%
    mutate(length = time - lag(time),
           response=as.numeric(code == 'stream_2'))

  means = responses %>%
    group_by(sid,stimulus,trial) %>%
    summarize(prop_streaming = sum(response*length,na.rm=T) / sum(length,na.rm=T),
              switches = length(response))

  ggplot(means,aes(x=stimulus,y=prop_streaming,shape=factor(sid),group=factor(sid))) +
    stat_summary(position=position_dodge(width=0.1)) +
    theme_classic() + ylab("% time streaming") +
    scale_x_discrete(labels=c('non-word\nto word','word to\nnon-word')) +
    coord_cartesian(ylim=c(0.1,0.9))
#+end_src

#+RESULTS:
[[file:1.png]]

#+begin_src R :session
ggsave(paste('plots/mean_streaming',Sys.Date(),'.pdf',sep=''))
#+end_src

#+RESULTS:

** Mean Response Time course

#+begin_src R :session  :results output silent
  means = by_context %>%
    group_by(time,stimulus,context) %>%
    summarise(lower = mean_cl_boot(response,conf.int=0.75)$ymin,
			  upper = mean_cl_boot(response,conf.int=0.75)$ymax,
			  response = mean(response))
#+end_src

#+begin_src R :session :file 2.png :results value graphics
  ggplot(means,aes(x=time,y=response,group=context)) +
    geom_ribbon(aes(ymin=lower,ymax=upper,y=response,fill=context),
                alpha=0.6) +
    geom_line() + facet_wrap(~stimulus) +
    geom_hline(yintercept=0.5,linetype=2) + xlim(0,40) +
    theme_classic() + ylab('% streaming') + xlab('time (s)') + ylim(0,1)
#+end_src

#+RESULTS:
[[file:2.png]]


#+begin_src R :session
ggsave(paste('plots/means_',Sys.Date(),'.pdf',sep=''))
#+end_src

#+RESULTS:

#+begin_src R :session :file 3.png :results value graphics
  ggplot(means,aes(x=time,y=response,group=stimulus)) +
    geom_ribbon(aes(ymin=lower,ymax=upper,y=response,fill=stimulus),
                alpha=0.6) +
    geom_line() + facet_wrap(~context) +
    geom_hline(yintercept=0.5,linetype=2) + xlim(0,40) +
    theme_classic() + ylab('% streaming') + xlab('time (s)') + ylim(0,1)
#+end_src

#+RESULTS:
[[file:3.png]]
#+begin_src R :session
ggsave(paste('plots/means_by_stimulus_',Sys.Date(),'.pdf',sep=''))
#+end_src

#+RESULTS:
